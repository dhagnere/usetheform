{"version":3,"sources":["webpack:///../docs/FormContext.mdx"],"names":["_frontmatter","name","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","__position","__code","__scope","Playground","FormContext","Form","Input","useForm","initialState","onInit","state","isFormValid","console","log","onChange","onSubmit","dispatch","type","onClick","prev","reducers","nextState","prevState","myNumber","value","isMDXComponent"],"mappings":"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","file":"component---docs-form-context-mdx-3eec1752a20a9283222f.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/travis/build/iusehooks/usetheform/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground } from 'docz';\nimport { FormContext, Form } from \"./helpers/FormContext\";\nimport { Input, useForm } from './../src';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst ResetName = makeShortcode(\"ResetName\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"formcontext\"\n    }}>{`FormContext`}</h1>\n    <p>{`It is a react component that provides a context of the \"form\" at wider level.`}</p>\n    <h3 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h3>\n    <p><strong parentName=\"p\"><inlineCode parentName=\"strong\">{`onInit`}</inlineCode></strong>{`: function`}</p>\n    <p>{`A function invoked when the Form is initialized.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`const onInit = (formState, isFormValid) => { // some operation }\n`}</code></pre>\n    <p><strong parentName=\"p\"><inlineCode parentName=\"strong\">{`onChange`}</inlineCode></strong>{`: function`}</p>\n    <p>{`A function invoked when any Form Field changes its value.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`const onChange = (formState, isFormValid) => { // some operation }\n`}</code></pre>\n    <p><strong parentName=\"p\"><inlineCode parentName=\"strong\">{`onReset`}</inlineCode></strong>{`: function`}</p>\n    <p>{`A function invoked when the form has been reset to its initial State.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`const onReset = (formState, isFormValid) => { // some operation }\n`}</code></pre>\n    <p><strong parentName=\"p\"><inlineCode parentName=\"strong\">{`onSubmit`}</inlineCode></strong>{`: function`}</p>\n    <p>{`A function invoked when the submit button has been pressed.\nThe function may return either a Promise or a boolean value true/false.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`const onSubmit = (formState) => { // some operation };\nconst onSubmit = (formState) => new Promise((resolve, reject) => { // some async operation  });\n`}</code></pre>\n    <p>{`Cases:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`If the function returns a Promise which is resolved it will increment the value named `}<strong parentName=\"li\">{`submitted`}</strong>{`.`}</li>\n      <li parentName=\"ul\">{`If the function returns a boolean value `}<inlineCode parentName=\"li\">{`true`}</inlineCode>{` or no return at all it will increment the value named `}<strong parentName=\"li\">{`submitted`}</strong>{`.`}</li>\n      <li parentName=\"ul\">{`If the function returns a Promise which is rejected the value named `}<strong parentName=\"li\">{`submitted`}</strong>{` will not be incremented.`}</li>\n      <li parentName=\"ul\">{`If the function returns a boolean value `}<inlineCode parentName=\"li\">{`false`}</inlineCode>{` the value named `}<strong parentName=\"li\">{`submitted`}</strong>{` will not be incremented.`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`  const { submitted, submitAttempts } = useForm();\n`}</code></pre>\n    <p>{`It will be only invoked if your form passes all the validations added at any level (Collections or Fields).\nFor each invokation the value `}<strong parentName=\"p\">{`submitAttempts`}</strong>{` will be incremented.`}</p>\n    <p><strong parentName=\"p\"><inlineCode parentName=\"strong\">{`initialState`}</inlineCode></strong>{`: object`}</p>\n    <p>{`It is a plain object that rappresent the initial state of the form.`}</p>\n    <p><strong parentName=\"p\"><inlineCode parentName=\"strong\">{`reducers`}</inlineCode></strong>{`: array | function`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`(nextState, prevState) => nextState\n`}</code></pre>\n    <p>{`An array whose values correspond to different reducing functions.\nReducers functions specify how the Form's state change.`}</p>\n    <h2 {...{\n      \"id\": \"basic-usage\"\n    }}>{`Basic usage`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`import { useForm } from 'usetheform'\nexport const Form = ({ children }) => {\n  const { onSubmitForm } = useForm();\n  return (\n    <form onSubmit={onSubmitForm}>\n      {children}\n    </form>\n  );\n};\n`}</code></pre>\n    <Playground __position={0} __code={'() => {\\n  const ResetName = () => {\\n    const { dispatch } = useForm()\\n    const resetName = () => {\\n      dispatch(prev => {\\n        const { name: omitName, ...newState } = prev\\n        return newState\\n      })\\n    }\\n    return (\\n      <button type=\\\"button\\\" onClick={resetName}>\\n        Reset Name\\n      </button>\\n    )\\n  }\\n  return (\\n    <FormContext\\n      initialState={{ name: \\'foo\\' }}\\n      onInit={(state, isFormValid) => console.log(\\'INIT\\', state, isFormValid)}\\n      onChange={(state, isFormValid) =>\\n        console.log(\\'CHANGE\\', state, isFormValid)\\n      }\\n      onSubmit={(state, isFormValid) =>\\n        console.log(\\'SUBMIT\\', state, isFormValid)\\n      }\\n    >\\n      <ResetName />\\n      <Form>\\n        <Input type=\\\"text\\\" name=\\\"name\\\" />\\n        <button type=\\\"submit\\\">Submit</button>\\n      </Form>\\n    </FormContext>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      FormContext,\n      Form,\n      Input,\n      useForm,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        const ResetName = () => {\n          const {\n            dispatch\n          } = useForm();\n\n          const resetName = () => {\n            dispatch(prev => {\n              const {\n                name: omitName,\n                ...newState\n              } = prev;\n              return newState;\n            });\n          };\n\n          return <button type=\"button\" onClick={resetName}>\n          Reset Name\n        </button>;\n        };\n\n        return <FormContext initialState={{\n          name: \"foo\"\n        }} onInit={(state, isFormValid) => console.log(\"INIT\", state, isFormValid)} onChange={(state, isFormValid) => console.log(\"CHANGE\", state, isFormValid)} onSubmit={(state, isFormValid) => console.log(\"SUBMIT\", state, isFormValid)} mdxType=\"FormContext\">\n        <ResetName mdxType=\"ResetName\" />\n        <Form mdxType=\"Form\">\n          <Input type=\"text\" name=\"name\" mdxType=\"Input\" />\n          <button type=\"submit\">Submit</button>\n        </Form>\n      </FormContext>;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"reducers\"\n    }}>{`Reducers`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`  import { FormContext, Input } from 'usetheform'\n`}</code></pre>\n    <Playground __position={1} __code={'() => {\\n  const maxNumber10 = (nextState, prevState) => {\\n    if (nextState.myNumber > 10) {\\n      nextState.myNumber = 10\\n    }\\n    return nextState\\n  }\\n  const minNumber1 = (nextState, prevState) => {\\n    if (nextState.myNumber <= 0) {\\n      nextState.myNumber = 0\\n    }\\n    return nextState\\n  }\\n  return (\\n    <FormContext reducers={[minNumber1, maxNumber10]}>\\n      <Form>\\n        <Input type=\\\"number\\\" name=\\\"myNumber\\\" value=\\\"1\\\" />\\n      </Form>\\n    </FormContext>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      FormContext,\n      Form,\n      Input,\n      useForm,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n      {() => {\n        const maxNumber10 = (nextState, prevState) => {\n          if (nextState.myNumber > 10) {\n            nextState.myNumber = 10;\n          }\n\n          return nextState;\n        };\n\n        const minNumber1 = (nextState, prevState) => {\n          if (nextState.myNumber <= 0) {\n            nextState.myNumber = 0;\n          }\n\n          return nextState;\n        };\n\n        return <FormContext reducers={[minNumber1, maxNumber10]} mdxType=\"FormContext\">\n        <Form mdxType=\"Form\">\n          <Input type=\"number\" name=\"myNumber\" value=\"1\" mdxType=\"Input\" />\n        </Form>\n      </FormContext>;\n      }}\n    </Playground>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}