(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{"/xLh":function(e,t,a){"use strict";a.r(t),a.d(t,"_frontmatter",(function(){return i})),a.d(t,"default",(function(){return d}));var n=a("k0FJ"),r=a("oedh"),o=(a("mXGw"),a("/FXl")),c=a("TjRS"),s=a("ZFoC"),l=a("RnGj"),u=a("Hn4R"),b=a("oXiK"),i=(a("aD51"),{});void 0!==i&&i&&i===Object(i)&&Object.isExtensible(i)&&!i.hasOwnProperty("__filemeta")&&Object.defineProperty(i,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"docs/TextArea.mdx"}});var m={_frontmatter:i},p=c.a;function d(e){var t,a,d,j,O=e.components,y=Object(r.a)(e,["components"]);return Object(o.b)(p,Object(n.a)({},m,y,{components:O,mdxType:"MDXLayout"}),Object(o.b)("h1",{id:"textarea"},"TextArea"),Object(o.b)("p",null,"It renders a ",Object(o.b)("em",{parentName:"p"},"textarea")," element: ",Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"https://www.w3schools.com/tags/tag_textarea.asp"}),"W3schools Textarea")," and accepts as props any html attribute listed at: ",Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"https://www.w3schools.com/tags/tag_textarea.asp"}),"Html Textarea Attributes"),"."),Object(o.b)("h3",{id:"props"},"Props"),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},Object(o.b)("inlineCode",{parentName:"strong"},"name")),": string - (except for ",Object(o.b)("strong",{parentName:"p"},"TextArea")," children of Collection of type array)"),Object(o.b)("p",null,"A field's name in Usetheform state."),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},Object(o.b)("inlineCode",{parentName:"strong"},"index")),": string - (only for ",Object(o.b)("strong",{parentName:"p"},"TextArea")," children of Collection of type array)"),Object(o.b)("p",null,"A field's index in array Collection."),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},Object(o.b)("inlineCode",{parentName:"strong"},"value")),": string"),Object(o.b)("p",null,"Specifies the initial value of an ",Object(o.b)("em",{parentName:"p"},"textarea")," element."),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},Object(o.b)("inlineCode",{parentName:"strong"},"touched")),": boolean"),Object(o.b)("p",null,"if ",Object(o.b)("em",{parentName:"p"},"true")," validation messages (sync and async) will be showing only when the event onBlur of the field is triggered by the user action."),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},Object(o.b)("inlineCode",{parentName:"strong"},"reducers")),": array | function"),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-javascript"}),"(nextValue, prevValue, formState) => nextValue\n")),Object(o.b)("p",null,"An array whose values correspond to different reducing functions.\nReducers functions specify how the TextArea's value change."),Object(o.b)("h2",{id:"basic-usage"},"Basic usage"),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-javascript"}),"  import Form, { TextArea } from 'usetheform'\n")),Object(o.b)(s.b,{__position:0,__code:'<Form>\n  <TextArea name="textarea" value="foo" />\n</Form>',__scope:(t={props:y,DefaultLayout:c.a,Playground:s.b,Form:l.a,Submit:u.a,TextArea:b.e,useValidation:b.k,useAsyncValidation:b.g},t.DefaultLayout=c.a,t._frontmatter=i,t),mdxType:"Playground"},Object(o.b)(l.a,{mdxType:"Form"},Object(o.b)(b.e,{name:"textarea",value:"foo",mdxType:"TextArea"}))),Object(o.b)("h2",{id:"reducers"},"Reducers"),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-javascript"}),"  import Form, { TextArea } from 'usetheform'\n")),Object(o.b)(s.b,{__position:1,__code:"() => {\n  const noHtmlTags = (nextValue, prevValue) =>\n    nextValue.replace(/(<([^>]+)>)/gi, '')\n  const notNumber = (nextValue, prevValue) =>\n    nextValue.replace(/[0-9]+/gi, '')\n  return (\n    <Form>\n      <TextArea\n        name=\"textareaReducer\"\n        reducers={[noHtmlTags, notNumber]}\n        value=\"foo\"\n      />\n    </Form>\n  )\n}",__scope:(a={props:y,DefaultLayout:c.a,Playground:s.b,Form:l.a,Submit:u.a,TextArea:b.e,useValidation:b.k,useAsyncValidation:b.g},a.DefaultLayout=c.a,a._frontmatter=i,a),mdxType:"Playground"},(function(){return Object(o.b)(l.a,{mdxType:"Form"},Object(o.b)(b.e,{name:"textareaReducer",reducers:[function(e,t){return e.replace(/(<([^>]+)>)/gi,"")},function(e,t){return e.replace(/[0-9]+/gi,"")}],value:"foo",mdxType:"TextArea"}))})),Object(o.b)("h2",{id:"validation---sync"},"Validation - Sync"),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-javascript"}),"  import { useValidation } from 'usetheform'\n")),Object(o.b)(s.b,{__position:2,__code:"() => {\n  const notNumber = value =>\n    !(value && !/^[A-Za-z ]+$/i.test(value))\n      ? undefined\n      : 'Numbers not allowed'\n  const required = value =>\n    value && value.trim() !== '' ? undefined : 'Required'\n  const [status, validation] = useValidation([required, notNumber])\n  return (\n    <Form>\n      <TextArea name=\"notEmpty\" touched {...validation} />\n      {status.error && <label>{status.error}</label>}\n    </Form>\n  )\n}",__scope:(d={props:y,DefaultLayout:c.a,Playground:s.b,Form:l.a,Submit:u.a,TextArea:b.e,useValidation:b.k,useAsyncValidation:b.g},d.DefaultLayout=c.a,d._frontmatter=i,d),mdxType:"Playground"},(function(){var e=Object(b.k)([function(e){return e&&""!==e.trim()?void 0:"Required"},function(e){return!e||/^[A-Za-z ]+$/i.test(e)?void 0:"Numbers not allowed"}]),t=e[0],a=e[1];return Object(o.b)(l.a,{mdxType:"Form"},Object(o.b)(b.e,Object(n.a)({name:"notEmpty",touched:!0},a,{mdxType:"TextArea"})),t.error&&Object(o.b)("label",null,t.error))})),Object(o.b)("h2",{id:"validation---async"},"Validation - Async"),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-javascript"}),"import { useAsyncValidation, useForm } from 'usetheform'\n\nconst Submit = () => {\n  const { isValid } = useForm();\n  return (\n    <button disabled={!isValid} type=\"submit\">\n      Submit\n    </button>\n  );\n};\n\n")),Object(o.b)(s.b,{__position:3,__code:"() => {\n  const asyncTest = value =>\n    new Promise((resolve, reject) => {\n      // it could be an API call or any async operation\n      setTimeout(() => {\n        if (value === 'foo') {\n          reject('text not allowed')\n        } else {\n          resolve('Success')\n        }\n      }, 1000)\n    })\n  const [asyncStatus, asyncValidation] = useAsyncValidation(asyncTest)\n  return (\n    <Form>\n      <TextArea name=\"text\" touched {...asyncValidation} />\n      {asyncStatus.status === undefined && <label>asyncNotStartedYet</label>}\n      {asyncStatus.status === 'asyncStart' && <label>Checking...</label>}\n      {asyncStatus.status === 'asyncError' && (\n        <label>{asyncStatus.value}</label>\n      )}\n      {asyncStatus.status === 'asyncSuccess' && (\n        <label>{asyncStatus.value}</label>\n      )}\n      <br />\n      <Submit />\n    </Form>\n  )\n}",__scope:(j={props:y,DefaultLayout:c.a,Playground:s.b,Form:l.a,Submit:u.a,TextArea:b.e,useValidation:b.k,useAsyncValidation:b.g},j.DefaultLayout=c.a,j._frontmatter=i,j),mdxType:"Playground"},(function(){var e=Object(b.g)((function(e){return new Promise((function(t,a){setTimeout((function(){"foo"===e?a("text not allowed"):t("Success")}),1e3)}))})),t=e[0],a=e[1];return Object(o.b)(l.a,{mdxType:"Form"},Object(o.b)(b.e,Object(n.a)({name:"text",touched:!0},a,{mdxType:"TextArea"})),void 0===t.status&&Object(o.b)("label",null,"asyncNotStartedYet"),"asyncStart"===t.status&&Object(o.b)("label",null,"Checking..."),"asyncError"===t.status&&Object(o.b)("label",null,t.value),"asyncSuccess"===t.status&&Object(o.b)("label",null,t.value),Object(o.b)("br",null),Object(o.b)(u.a,{mdxType:"Submit"}))})))}void 0!==d&&d&&d===Object(d)&&Object.isExtensible(d)&&!d.hasOwnProperty("__filemeta")&&Object.defineProperty(d,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"docs/TextArea.mdx"}}),d.isMDXComponent=!0}}]);
//# sourceMappingURL=component---docs-text-area-mdx-dd1d63de60d0822666be.js.map