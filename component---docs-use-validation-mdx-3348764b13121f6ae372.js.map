{"version":3,"sources":["webpack:///../docs/useValidation.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","__position","__code","__scope","Playground","Form","Input","useValidation","value","undefined","status","validationAttr","type","name","touched","error","isMDXComponent"],"mappings":"4RASaA,G,UAAe,S,wMAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,MAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,iBAAQ,CACN,GAAM,iBADR,iBAGA,uGACA,uBAAK,gCAAMC,WAAW,OAAU,CAC5B,UAAa,wBADZ,mEAIL,iBAAQ,CACN,GAAM,aADR,aAGA,qBAAG,sBAAQA,WAAW,KAAI,0BAAYA,WAAW,UAAvB,cAA1B,WACA,sBACE,kBAAIA,WAAW,MAAf,sIAA2J,0BAAYA,WAAW,MAAvB,qBAA3J,6EAEF,iBAAQ,CACN,GAAM,WADR,WAGA,yBAAQ,sBAAQA,WAAW,KAAI,0BAAYA,WAAW,UAAvB,oBAA/B,YACA,6CACA,sBACE,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAK,sBAAQA,WAAW,KAAI,0BAAYA,WAAW,UAAvB,WAA1C,YACA,iBAAGA,WAAW,MAAd,0CAA8D,0BAAYA,WAAW,KAAvB,SAA9D,uBACW,0BAAYA,WAAW,KAAvB,SADX,yKAIF,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAK,sBAAQA,WAAW,KAAI,0BAAYA,WAAW,UAAvB,mBAA1C,YACA,iBAAGA,WAAW,MAAd,qFAGJ,iBAAQ,CACN,GAAM,eADR,eAGA,uBAAK,gCAAMA,WAAW,OAAU,CAC5B,UAAa,wBADZ,gEAIL,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,sUAA2UC,SAAO,GACnXL,QACAH,kBACAS,eACAC,SACAC,UACAC,mBANmX,gBAOnXZ,IAPmX,EAQnXH,eARmX,GASlXO,QAAQ,eACR,WACC,IADK,EAG4BQ,YAAc,CAF9B,SAAAC,GAAK,OAAIA,GAAmB,KAAVA,OAAeC,EAAY,cAEvDC,EAHF,KAGUC,EAHV,KAIL,OAAO,YAAC,IAAD,CAAMZ,QAAQ,QACrB,YAAC,IAAD,aAAOa,KAAK,OAAOC,KAAK,UAAUC,SAAO,GAAKH,EAA9C,CAA8DZ,QAAQ,WACrEW,EAAOK,OAAS,yBAAQL,EAAOK,iB,sMAQxCnB,EAAWoB,gBAAiB","file":"component---docs-use-validation-mdx-3348764b13121f6ae372.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/travis/build/iusehooks/usetheform/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground } from 'docz';\nimport { Form } from \"./helpers/Form\";\nimport { Input, useValidation } from './../src';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"usevalidation\"\n    }}>{`useValidation`}</h1>\n    <p>{`It is a custom hook function which provides the validation logic to any Field.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`  const [status, validation] = useValidation([...functions])\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"arguments\"\n    }}>{`Arguments`}</h2>\n    <p><strong parentName=\"p\"><inlineCode parentName=\"strong\">{`functions`}</inlineCode></strong>{`: array`}</p>\n    <ul>\n      <li parentName=\"ul\">{`A validation function is a pure function which receives the field value and checks if wheater the value is valid or not, returning `}<inlineCode parentName=\"li\">{`undefined or null`}</inlineCode>{` if it is valid or a string with some custom message if it is not valid.`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"returns\"\n    }}>{`Returns`}</h2>\n    <p>{`(`}<strong parentName=\"p\"><inlineCode parentName=\"strong\">{`validationProps`}</inlineCode></strong>{`): array`}</p>\n    <p>{`An array that holds:`}</p>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><strong parentName=\"p\"><inlineCode parentName=\"strong\">{`status`}</inlineCode></strong>{`: object`}</p>\n        <p parentName=\"li\">{`A plain object that holds a prop named `}<inlineCode parentName=\"p\">{`error`}</inlineCode>{`.\nThe value of the `}<inlineCode parentName=\"p\">{`error`}</inlineCode>{` might be \"undefined\" if all validation functions\nhave passed the validation with success or a \"string\" if one of the validation functions return an error message.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><strong parentName=\"p\"><inlineCode parentName=\"strong\">{`validationAttr`}</inlineCode></strong>{`: object`}</p>\n        <p parentName=\"li\">{`A plain object which contains all the props that must be spreaded to the Field.`}</p>\n      </li>\n    </ul>\n    <h2 {...{\n      \"id\": \"basic-usage\"\n    }}>{`Basic usage`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`  import Form, { Input, useValidation } from 'usetheform'\n`}</code></pre>\n    <Playground __position={0} __code={'() => {\\n  const required = value => (value && value !== \\'\\' ? undefined : \\'Required\\')\\n  const [status, validationAttr] = useValidation([required])\\n  return (\\n    <Form>\\n      <Input type=\\\"text\\\" name=\\\"anyname\\\" touched {...validationAttr} />\\n      {status.error && <label>{status.error}</label>}\\n    </Form>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Form,\n      Input,\n      useValidation,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n      {() => {\n        const required = value => value && value !== \"\" ? undefined : \"Required\";\n\n        const [status, validationAttr] = useValidation([required]);\n        return <Form mdxType=\"Form\">\n        <Input type=\"text\" name=\"anyname\" touched {...validationAttr} mdxType=\"Input\" />\n        {status.error && <label>{status.error}</label>}\n      </Form>;\n      }}\n    </Playground>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}