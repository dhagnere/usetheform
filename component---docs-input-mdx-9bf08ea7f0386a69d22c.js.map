{"version":3,"sources":["webpack:///../docs/Input.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","__position","__code","__scope","Playground","Form","Submit","Input","useValidation","useAsyncValidation","type","name","value","checked","reducers","nextValue","prevValue","trim","undefined","test","status","validation","touched","error","Promise","resolve","reject","setTimeout","asyncStatus","asyncValidation","isMDXComponent"],"mappings":"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","file":"component---docs-input-mdx-9bf08ea7f0386a69d22c.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/travis/build/iusehooks/usetheform/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground } from 'docz';\nimport { Form } from \"./helpers/Form\";\nimport { Submit } from \"./helpers/Submit\";\nimport { Input, useValidation, useAsyncValidation } from './../src';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"input\"\n    }}>{`Input`}</h1>\n    <p>{`It renders all the inputs of type listed at: `}<a parentName=\"p\" {...{\n        \"href\": \"https://www.w3schools.com/html/html_form_input_types.asp\"\n      }}>{`W3schools Input Types`}</a>{` and accepts as props any html attribute listed at: `}<a parentName=\"p\" {...{\n        \"href\": \"https://www.w3schools.com/tags/tag_input.asp\"\n      }}>{`Html Input Attributes`}</a>{`.`}</p>\n    <h3 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h3>\n    <p><strong parentName=\"p\"><inlineCode parentName=\"strong\">{`type`}</inlineCode></strong>{`: string`}</p>\n    <p>{`Type listed at: `}<a parentName=\"p\" {...{\n        \"href\": \"https://www.w3schools.com/html/html_form_input_types.asp\"\n      }}>{`W3schools Input Types`}</a>{`.\nIt also supports a `}<inlineCode parentName=\"p\">{`custom`}</inlineCode>{` type (type=\"custom\").`}</p>\n    <p><strong parentName=\"p\"><inlineCode parentName=\"strong\">{`name`}</inlineCode></strong>{`: string - (except for `}<strong parentName=\"p\">{`Input`}</strong>{` children of Collection of type array)`}</p>\n    <p>{`A field's name in Usetheform state.`}</p>\n    <p><strong parentName=\"p\"><inlineCode parentName=\"strong\">{`index`}</inlineCode></strong>{`: string - (only for `}<strong parentName=\"p\">{`Input`}</strong>{` children of Collection of type array)`}</p>\n    <p>{`A field's index in array Collection.`}</p>\n    <p><strong parentName=\"p\"><inlineCode parentName=\"strong\">{`value`}</inlineCode></strong>{`: string | number | object`}</p>\n    <p>{`Specifies the initial value of an `}<em parentName=\"p\">{`input`}</em>{` element.`}</p>\n    <p><strong parentName=\"p\"><inlineCode parentName=\"strong\">{`checked`}</inlineCode></strong>{`: boolean`}</p>\n    <p>{`Specifies that an `}<em parentName=\"p\">{`input`}</em>{` element should be pre-selected or not (for type=\"checkbox\" or type=\"radio\").`}</p>\n    <p><strong parentName=\"p\"><inlineCode parentName=\"strong\">{`touched`}</inlineCode></strong>{`: boolean`}</p>\n    <p>{`if `}<em parentName=\"p\">{`true`}</em>{` validation messages (sync and async) will be showing only when the event onBlur of the field is triggered by the user action.`}</p>\n    <p><strong parentName=\"p\"><inlineCode parentName=\"strong\">{`reducers`}</inlineCode></strong>{`: array | function`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`(nextValue, prevValue, formState) => nextValue\n`}</code></pre>\n    <p>{`An array whose values correspond to different reducing functions.\nReducers functions specify how the Input's value change.`}</p>\n    <h2 {...{\n      \"id\": \"basic-usage\"\n    }}>{`Basic usage`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`  import Form, { Input, Collection } from 'usetheform'\n`}</code></pre>\n    <Playground __position={0} __code={'<Form>\\n  <Input type=\\\"text\\\" name=\\\"name\\\" value=\\\"foo\\\" />\\n  <Input type=\\\"radio\\\" name=\\\"sex\\\" value=\\\"M\\\" />\\n  <Input type=\\\"radio\\\" name=\\\"sex\\\" value=\\\"F\\\" />\\n  <Input type=\\\"checkbox\\\" name=\\\"one\\\" checked />\\n  <Input type=\\\"checkbox\\\" name=\\\"second\\\" />\\n  <Input type=\\\"file\\\" name=\\\"file\\\" />\\n</Form>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Form,\n      Submit,\n      Input,\n      useValidation,\n      useAsyncValidation,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <Form mdxType=\"Form\">\n    <Input type=\"text\" name=\"name\" value=\"foo\" mdxType=\"Input\" />\n    <Input type=\"radio\" name=\"sex\" value=\"M\" mdxType=\"Input\" />\n    <Input type=\"radio\" name=\"sex\" value=\"F\" mdxType=\"Input\" />\n    <Input type=\"checkbox\" name=\"one\" checked mdxType=\"Input\" />\n    <Input type=\"checkbox\" name=\"second\" mdxType=\"Input\" />\n    <Input type=\"file\" name=\"file\" mdxType=\"Input\" />\n  </Form>\n    </Playground>\n    <h2 {...{\n      \"id\": \"reducers\"\n    }}>{`Reducers`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`  import Form, { Input } from 'usetheform'\n`}</code></pre>\n    <Playground __position={1} __code={'() => {\\n  const maxNumber10 = (nextValue, prevValue) =>\\n    nextValue > 10 ? prevValue : nextValue\\n  const minNumber1 = (nextValue, prevValue) =>\\n    nextValue <= 0 ? prevValue : nextValue\\n  return (\\n    <Form>\\n      <Input\\n        type=\\\"number\\\"\\n        name=\\\"numberWithReducer\\\"\\n        reducers={[minNumber1, maxNumber10]}\\n        value=\\\"1\\\"\\n      />\\n    </Form>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Form,\n      Submit,\n      Input,\n      useValidation,\n      useAsyncValidation,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n      {() => {\n        const maxNumber10 = (nextValue, prevValue) => nextValue > 10 ? prevValue : nextValue;\n\n        const minNumber1 = (nextValue, prevValue) => nextValue <= 0 ? prevValue : nextValue;\n\n        return <Form mdxType=\"Form\">\n        <Input type=\"number\" name=\"numberWithReducer\" reducers={[minNumber1, maxNumber10]} value=\"1\" mdxType=\"Input\" />\n      </Form>;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"validation---sync\"\n    }}>{`Validation - Sync`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`  import { useValidation } from 'usetheform'\n`}</code></pre>\n    <Playground __position={2} __code={'() => {\\n  const isValidEmail = value =>\\n    !(value && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\\\.[A-Z]{2,4}$/i.test(value))\\n      ? undefined\\n      : \\'Mail not Valid\\'\\n  const required = value =>\\n    value && value.trim() !== \\'\\' ? undefined : \\'Required\\'\\n  const [status, validation] = useValidation([required, isValidEmail])\\n  return (\\n    <Form>\\n      <Input type=\\\"text\\\" name=\\\"email\\\" touched {...validation} />\\n      {status.error && <label>{status.error}</label>}\\n      <Submit />\\n    </Form>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Form,\n      Submit,\n      Input,\n      useValidation,\n      useAsyncValidation,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n      {() => {\n        const isValidEmail = value => !(value && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value)) ? undefined : \"Mail not Valid\";\n\n        const required = value => value && value.trim() !== \"\" ? undefined : \"Required\";\n\n        const [status, validation] = useValidation([required, isValidEmail]);\n        return <Form mdxType=\"Form\">\n        <Input type=\"text\" name=\"email\" touched {...validation} mdxType=\"Input\" />\n        {status.error && <label>{status.error}</label>}\n        <Submit mdxType=\"Submit\" />\n      </Form>;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"validation---async\"\n    }}>{`Validation - Async`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`import { useAsyncValidation, useForm } from 'usetheform'\n\nconst Submit = () => {\n  const { isValid } = useForm();\n  return (\n    <button disabled={!isValid} type=\"submit\">\n      Submit\n    </button>\n  );\n};\n\n`}</code></pre>\n    <Playground __position={3} __code={'() => {\\n  const asyncTest = value =>\\n    new Promise((resolve, reject) => {\\n      // it could be an API call or any async operation\\n      setTimeout(() => {\\n        if (value === \\'foo\\') {\\n          reject(\\'username already in use\\')\\n        } else {\\n          resolve(\\'Success\\')\\n        }\\n      }, 1000)\\n    })\\n  const [asyncStatus, asyncValidation] = useAsyncValidation(asyncTest)\\n  return (\\n    <Form>\\n      <Input type=\\\"text\\\" name=\\\"username\\\" touched {...asyncValidation} />\\n      {asyncStatus.status === undefined && <label>asyncNotStartedYet</label>}\\n      {asyncStatus.status === \\'asyncStart\\' && <label>Checking...</label>}\\n      {asyncStatus.status === \\'asyncError\\' && (\\n        <label>{asyncStatus.value}</label>\\n      )}\\n      {asyncStatus.status === \\'asyncSuccess\\' && (\\n        <label>{asyncStatus.value}</label>\\n      )}\\n      <br />\\n      <Submit />\\n    </Form>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Form,\n      Submit,\n      Input,\n      useValidation,\n      useAsyncValidation,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n      {() => {\n        const asyncTest = value => new Promise((resolve, reject) => {\n          // it could be an API call or any async operation\n          setTimeout(() => {\n            if (value === \"foo\") {\n              reject(\"username already in use\");\n            } else {\n              resolve(\"Success\");\n            }\n          }, 1000);\n        });\n\n        const [asyncStatus, asyncValidation] = useAsyncValidation(asyncTest);\n        return <Form mdxType=\"Form\">\n        <Input type=\"text\" name=\"username\" touched {...asyncValidation} mdxType=\"Input\" />\n        {asyncStatus.status === undefined && <label>asyncNotStartedYet</label>}\n        {asyncStatus.status === \"asyncStart\" && <label>Checking...</label>}\n        {asyncStatus.status === \"asyncError\" && <label>{asyncStatus.value}</label>}\n        {asyncStatus.status === \"asyncSuccess\" && <label>{asyncStatus.value}</label>}\n        <br />\n        <Submit mdxType=\"Submit\" />\n      </Form>;\n      }}\n    </Playground>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}