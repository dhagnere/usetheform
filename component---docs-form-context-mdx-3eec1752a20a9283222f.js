(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{hRQU:function(e,t,n){"use strict";n.r(t),n.d(t,"_frontmatter",(function(){return u})),n.d(t,"default",(function(){return j}));var o=n("k0FJ"),a=n("oedh"),r=(n("mXGw"),n("/FXl")),b=n("TjRS"),m=n("ZFoC"),i=n("BjnV"),c=n("oXiK"),u=(n("aD51"),{});void 0!==u&&u&&u===Object(u)&&Object.isExtensible(u)&&!u.hasOwnProperty("__filemeta")&&Object.defineProperty(u,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"docs/FormContext.mdx"}});s="ResetName";var s,l={_frontmatter:u},p=b.a;function j(e){var t,n,s=e.components,j=Object(a.a)(e,["components"]);return Object(r.b)(p,Object(o.a)({},l,j,{components:s,mdxType:"MDXLayout"}),Object(r.b)("h1",{id:"formcontext"},"FormContext"),Object(r.b)("p",null,'It is a react component that provides a context of the "form" at wider level.'),Object(r.b)("h3",{id:"props"},"Props"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},Object(r.b)("inlineCode",{parentName:"strong"},"onInit")),": function"),Object(r.b)("p",null,"A function invoked when the Form is initialized."),Object(r.b)("pre",null,Object(r.b)("code",Object(o.a)({parentName:"pre"},{className:"language-javascript"}),"const onInit = (formState, isFormValid) => { // some operation }\n")),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},Object(r.b)("inlineCode",{parentName:"strong"},"onChange")),": function"),Object(r.b)("p",null,"A function invoked when any Form Field changes its value."),Object(r.b)("pre",null,Object(r.b)("code",Object(o.a)({parentName:"pre"},{className:"language-javascript"}),"const onChange = (formState, isFormValid) => { // some operation }\n")),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},Object(r.b)("inlineCode",{parentName:"strong"},"onReset")),": function"),Object(r.b)("p",null,"A function invoked when the form has been reset to its initial State."),Object(r.b)("pre",null,Object(r.b)("code",Object(o.a)({parentName:"pre"},{className:"language-javascript"}),"const onReset = (formState, isFormValid) => { // some operation }\n")),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},Object(r.b)("inlineCode",{parentName:"strong"},"onSubmit")),": function"),Object(r.b)("p",null,"A function invoked when the submit button has been pressed.\nThe function may return either a Promise or a boolean value true/false."),Object(r.b)("pre",null,Object(r.b)("code",Object(o.a)({parentName:"pre"},{className:"language-js"}),"const onSubmit = (formState) => { // some operation };\nconst onSubmit = (formState) => new Promise((resolve, reject) => { // some async operation  });\n")),Object(r.b)("p",null,"Cases:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"If the function returns a Promise which is resolved it will increment the value named ",Object(r.b)("strong",{parentName:"li"},"submitted"),"."),Object(r.b)("li",{parentName:"ul"},"If the function returns a boolean value ",Object(r.b)("inlineCode",{parentName:"li"},"true")," or no return at all it will increment the value named ",Object(r.b)("strong",{parentName:"li"},"submitted"),"."),Object(r.b)("li",{parentName:"ul"},"If the function returns a Promise which is rejected the value named ",Object(r.b)("strong",{parentName:"li"},"submitted")," will not be incremented."),Object(r.b)("li",{parentName:"ul"},"If the function returns a boolean value ",Object(r.b)("inlineCode",{parentName:"li"},"false")," the value named ",Object(r.b)("strong",{parentName:"li"},"submitted")," will not be incremented.")),Object(r.b)("pre",null,Object(r.b)("code",Object(o.a)({parentName:"pre"},{className:"language-js"}),"  const { submitted, submitAttempts } = useForm();\n")),Object(r.b)("p",null,"It will be only invoked if your form passes all the validations added at any level (Collections or Fields).\nFor each invokation the value ",Object(r.b)("strong",{parentName:"p"},"submitAttempts")," will be incremented."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},Object(r.b)("inlineCode",{parentName:"strong"},"initialState")),": object"),Object(r.b)("p",null,"It is a plain object that rappresent the initial state of the form."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},Object(r.b)("inlineCode",{parentName:"strong"},"reducers")),": array | function"),Object(r.b)("pre",null,Object(r.b)("code",Object(o.a)({parentName:"pre"},{className:"language-javascript"}),"(nextState, prevState) => nextState\n")),Object(r.b)("p",null,"An array whose values correspond to different reducing functions.\nReducers functions specify how the Form's state change."),Object(r.b)("h2",{id:"basic-usage"},"Basic usage"),Object(r.b)("pre",null,Object(r.b)("code",Object(o.a)({parentName:"pre"},{className:"language-js"}),"import { useForm } from 'usetheform'\nexport const Form = ({ children }) => {\n  const { onSubmitForm } = useForm();\n  return (\n    <form onSubmit={onSubmitForm}>\n      {children}\n    </form>\n  );\n};\n")),Object(r.b)(m.b,{__position:0,__code:"() => {\n  const ResetName = () => {\n    const { dispatch } = useForm()\n    const resetName = () => {\n      dispatch(prev => {\n        const { name: omitName, ...newState } = prev\n        return newState\n      })\n    }\n    return (\n      <button type=\"button\" onClick={resetName}>\n        Reset Name\n      </button>\n    )\n  }\n  return (\n    <FormContext\n      initialState={{ name: 'foo' }}\n      onInit={(state, isFormValid) => console.log('INIT', state, isFormValid)}\n      onChange={(state, isFormValid) =>\n        console.log('CHANGE', state, isFormValid)\n      }\n      onSubmit={(state, isFormValid) =>\n        console.log('SUBMIT', state, isFormValid)\n      }\n    >\n      <ResetName />\n      <Form>\n        <Input type=\"text\" name=\"name\" />\n        <button type=\"submit\">Submit</button>\n      </Form>\n    </FormContext>\n  )\n}",__scope:(t={props:j,DefaultLayout:b.a,Playground:m.b,FormContext:i.b,Form:i.a,Input:c.c,useForm:c.i},t.DefaultLayout=b.a,t._frontmatter=u,t),mdxType:"Playground"},(function(){return Object(r.b)(i.b,{initialState:{name:"foo"},onInit:function(e,t){return console.log("INIT",e,t)},onChange:function(e,t){return console.log("CHANGE",e,t)},onSubmit:function(e,t){return console.log("SUBMIT",e,t)},mdxType:"FormContext"},Object(r.b)((function(){var e=Object(c.i)().dispatch;return Object(r.b)("button",{type:"button",onClick:function(){e((function(e){e.name;return Object(a.a)(e,["name"])}))}},"Reset Name")}),{mdxType:"ResetName"}),Object(r.b)(i.a,{mdxType:"Form"},Object(r.b)(c.c,{type:"text",name:"name",mdxType:"Input"}),Object(r.b)("button",{type:"submit"},"Submit")))})),Object(r.b)("h2",{id:"reducers"},"Reducers"),Object(r.b)("pre",null,Object(r.b)("code",Object(o.a)({parentName:"pre"},{className:"language-js"}),"  import { FormContext, Input } from 'usetheform'\n")),Object(r.b)(m.b,{__position:1,__code:'() => {\n  const maxNumber10 = (nextState, prevState) => {\n    if (nextState.myNumber > 10) {\n      nextState.myNumber = 10\n    }\n    return nextState\n  }\n  const minNumber1 = (nextState, prevState) => {\n    if (nextState.myNumber <= 0) {\n      nextState.myNumber = 0\n    }\n    return nextState\n  }\n  return (\n    <FormContext reducers={[minNumber1, maxNumber10]}>\n      <Form>\n        <Input type="number" name="myNumber" value="1" />\n      </Form>\n    </FormContext>\n  )\n}',__scope:(n={props:j,DefaultLayout:b.a,Playground:m.b,FormContext:i.b,Form:i.a,Input:c.c,useForm:c.i},n.DefaultLayout=b.a,n._frontmatter=u,n),mdxType:"Playground"},(function(){return Object(r.b)(i.b,{reducers:[function(e,t){return e.myNumber<=0&&(e.myNumber=0),e},function(e,t){return e.myNumber>10&&(e.myNumber=10),e}],mdxType:"FormContext"},Object(r.b)(i.a,{mdxType:"Form"},Object(r.b)(c.c,{type:"number",name:"myNumber",value:"1",mdxType:"Input"})))})))}void 0!==j&&j&&j===Object(j)&&Object.isExtensible(j)&&!j.hasOwnProperty("__filemeta")&&Object.defineProperty(j,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"docs/FormContext.mdx"}}),j.isMDXComponent=!0}}]);
//# sourceMappingURL=component---docs-form-context-mdx-3eec1752a20a9283222f.js.map