(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{kMzV:function(e,t,a){"use strict";a.r(t),a.d(t,"_frontmatter",(function(){return i})),a.d(t,"default",(function(){return m}));var n=a("k0FJ"),c=a("oedh"),s=(a("mXGw"),a("/FXl")),r=a("TjRS"),l=a("ZFoC"),b=a("RnGj"),o=a("oXiK"),i=(a("aD51"),{});void 0!==i&&i&&i===Object(i)&&Object.isExtensible(i)&&!i.hasOwnProperty("__filemeta")&&Object.defineProperty(i,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"docs/useAsyncValidation.mdx"}});var u={_frontmatter:i},p=r.a;function m(e){var t,a=e.components,m=Object(c.a)(e,["components"]);return Object(s.b)(p,Object(n.a)({},u,m,{components:a,mdxType:"MDXLayout"}),Object(s.b)("h1",{id:"useasyncvalidation"},"useAsyncValidation"),Object(s.b)("p",null,"It is a custom hook function which provides the async validation logic to any Field."),Object(s.b)("pre",null,Object(s.b)("code",Object(n.a)({parentName:"pre"},{className:"language-javascript"}),"  const [asyncStatus, validationAsyncAttr] = useAsyncValidation(fn);\n")),Object(s.b)("h2",{id:"arguments"},"Arguments"),Object(s.b)("p",null,Object(s.b)("strong",{parentName:"p"},Object(s.b)("inlineCode",{parentName:"strong"},"fn")),": function"),Object(s.b)("ul",null,Object(s.b)("li",{parentName:"ul"},"A function which receive the value of the field and return a promise.")),Object(s.b)("h2",{id:"returns"},"Returns"),Object(s.b)("p",null,"(",Object(s.b)("strong",{parentName:"p"},Object(s.b)("inlineCode",{parentName:"strong"},"validationAsyncProps")),"): array"),Object(s.b)("p",null,"An array that holds:"),Object(s.b)("ul",null,Object(s.b)("li",{parentName:"ul"},Object(s.b)("p",{parentName:"li"},Object(s.b)("strong",{parentName:"p"},Object(s.b)("inlineCode",{parentName:"strong"},"asyncStatus")),": object"),Object(s.b)("p",{parentName:"li"},"A plain object that holds a prop named ",Object(s.b)("inlineCode",{parentName:"p"},"status")," and a prop named ",Object(s.b)("inlineCode",{parentName:"p"},"value"),"."),Object(s.b)("ul",{parentName:"li"},Object(s.b)("li",{parentName:"ul"},Object(s.b)("p",{parentName:"li"},Object(s.b)("strong",{parentName:"p"},Object(s.b)("inlineCode",{parentName:"strong"},"status"))," might be one of the following:"),Object(s.b)("ul",{parentName:"li"},Object(s.b)("li",{parentName:"ul"},'"undefined" : async validation did not start yet'),Object(s.b)("li",{parentName:"ul"},'"asyncStart" : async validation has started'),Object(s.b)("li",{parentName:"ul"},'"asyncSuccess" : the promise has been resolved with success'),Object(s.b)("li",{parentName:"ul"},'"asyncError" : the promise has been rejected'))),Object(s.b)("li",{parentName:"ul"},Object(s.b)("p",{parentName:"li"},Object(s.b)("strong",{parentName:"p"},Object(s.b)("inlineCode",{parentName:"strong"},"value"))," the value returned by the promise ")))),Object(s.b)("li",{parentName:"ul"},Object(s.b)("p",{parentName:"li"},Object(s.b)("strong",{parentName:"p"},Object(s.b)("inlineCode",{parentName:"strong"},"validationAsyncAttr")),": object"),Object(s.b)("p",{parentName:"li"},"A plain object which contains all the props that must be spreaded to the Field."))),Object(s.b)("h2",{id:"basic-usage"},"Basic usage"),Object(s.b)("pre",null,Object(s.b)("code",Object(n.a)({parentName:"pre"},{className:"language-javascript"}),"  import Form, { Input, useAsyncValidation } from 'usetheform'\n")),Object(s.b)(l.b,{__position:0,__code:"() => {\n  const asyncTest = value =>\n    new Promise((resolve, reject) => {\n      setTimeout(() => {\n        if (value.length <= 3) {\n          reject('Error')\n        } else resolve('Success')\n      }, 1500)\n    })\n  const [asyncStatus, validationAsyncAttr] = useAsyncValidation(asyncTest)\n  return (\n    <Form>\n      <Input type=\"text\" name=\"name\" touched {...validationAsyncAttr} />\n      {asyncStatus.status === undefined && <label>asyncNotStartedYet</label>}\n      {asyncStatus.status === 'asyncStart' && <label>Checking...</label>}\n      {asyncStatus.status === 'asyncError' && (\n        <label>{asyncStatus.value}</label>\n      )}\n      {asyncStatus.status === 'asyncSuccess' && (\n        <label>{asyncStatus.value}</label>\n      )}\n    </Form>\n  )\n}",__scope:(t={props:m,DefaultLayout:r.a,Playground:l.b,Form:b.a,Input:o.c,useAsyncValidation:o.g},t.DefaultLayout=r.a,t._frontmatter=i,t),mdxType:"Playground"},(function(){var e=Object(o.g)((function(e){return new Promise((function(t,a){setTimeout((function(){e.length<=3?a("Error"):t("Success")}),1500)}))})),t=e[0],a=e[1];return Object(s.b)(b.a,{mdxType:"Form"},Object(s.b)(o.c,Object(n.a)({type:"text",name:"name",touched:!0},a,{mdxType:"Input"})),void 0===t.status&&Object(s.b)("label",null,"asyncNotStartedYet"),"asyncStart"===t.status&&Object(s.b)("label",null,"Checking..."),"asyncError"===t.status&&Object(s.b)("label",null,t.value),"asyncSuccess"===t.status&&Object(s.b)("label",null,t.value))})))}void 0!==m&&m&&m===Object(m)&&Object.isExtensible(m)&&!m.hasOwnProperty("__filemeta")&&Object.defineProperty(m,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"docs/useAsyncValidation.mdx"}}),m.isMDXComponent=!0}}]);
//# sourceMappingURL=component---docs-use-async-validation-mdx-75567e99c465b8cb4889.js.map