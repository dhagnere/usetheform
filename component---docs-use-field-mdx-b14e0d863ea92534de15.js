(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{TYlZ:function(e,t,n){"use strict";n.r(t),n.d(t,"_frontmatter",(function(){return b})),n.d(t,"default",(function(){return o}));var a=n("k0FJ"),r=n("oedh"),i=(n("mXGw"),n("/FXl")),l=n("TjRS"),b=(n("aD51"),{});void 0!==b&&b&&b===Object(b)&&Object.isExtensible(b)&&!b.hasOwnProperty("__filemeta")&&Object.defineProperty(b,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"docs/useField.mdx"}});var p={_frontmatter:b},c=l.a;function o(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(i.b)(c,Object(a.a)({},p,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("h1",{id:"usefield"},"useField"),Object(i.b)("p",null,"It is a custom React hook which allows to build a custom input primitives."),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-javascript"}),"  const fieldInputProps = useField(options)\n")),Object(i.b)("h2",{id:"arguments"},"Arguments"),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},Object(i.b)("inlineCode",{parentName:"strong"},"options")),": object"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},Object(i.b)("strong",{parentName:"p"},Object(i.b)("inlineCode",{parentName:"strong"},"type")),": string"),Object(i.b)("p",{parentName:"li"},"Strings accepted: ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"https://www.w3schools.com/html/html_form_input_types.asp"}),"W3schools Input Types"),' - "select" - "custom"')),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},Object(i.b)("strong",{parentName:"p"},Object(i.b)("inlineCode",{parentName:"strong"},"name")),": string - (except for children of Collection of type array)"),Object(i.b)("p",{parentName:"li"},"A field's name in Usetheform state.")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},Object(i.b)("strong",{parentName:"p"},Object(i.b)("inlineCode",{parentName:"strong"},"index")),": string - (only for children of Collection of type array)"),Object(i.b)("p",{parentName:"li"},"A field's index in array Collection.")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},Object(i.b)("strong",{parentName:"p"},Object(i.b)("inlineCode",{parentName:"strong"},"value")),": string | number | object"),Object(i.b)("p",{parentName:"li"},"Specifies the initial value of an ",Object(i.b)("em",{parentName:"p"},"input")," element.")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},Object(i.b)("strong",{parentName:"p"},Object(i.b)("inlineCode",{parentName:"strong"},"checked")),": boolean"),Object(i.b)("p",{parentName:"li"},"Specifies that an ",Object(i.b)("em",{parentName:"p"},"input"),' element should be pre-selected or not (for type="checkbox" or type="radio").')),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},Object(i.b)("strong",{parentName:"p"},Object(i.b)("inlineCode",{parentName:"strong"},"touched")),": boolean"),Object(i.b)("p",{parentName:"li"},"if ",Object(i.b)("em",{parentName:"p"},"true")," validation messages (sync and async) will be showing only when the event onBlur of the field is triggered by the user action.")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},Object(i.b)("strong",{parentName:"p"},Object(i.b)("inlineCode",{parentName:"strong"},"reducers")),": array | function"),Object(i.b)("pre",{parentName:"li"},Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"(nextValue, prevValue, formState) => nextValue\n")),Object(i.b)("p",{parentName:"li"},"An array whose values correspond to different reducing functions.\nReducers functions specify how the Input's value change."))),Object(i.b)("h2",{id:"returns"},"Returns"),Object(i.b)("p",null,"(",Object(i.b)("strong",{parentName:"p"},Object(i.b)("inlineCode",{parentName:"strong"},"FieldInputProps")),"): object"),Object(i.b)("p",null,"An object that holds all the attributes of your field."),Object(i.b)("h2",{id:"basic-usage"},"Basic usage"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-javascript"}),'const CustomInput = props => {\n  const fieldInputProps = useField({\n    type: "text",\n    name: "simple",\n    value: "foo"\n  });\n  return <input {...fieldInputProps} />;\n}\n')),Object(i.b)("h2",{id:"reducers"},"Reducers"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-javascript"}),'const maxNumber10 = (nextValue, prevValue) => nextValue > 10 ? prevValue : nextValue;\nconst minNumber1 = (nextValue, prevValue) => nextValue <= 0 ? prevValue : nextValue;\n\nconst CustomInput = props => {\n  const fieldInputProps = useField({\n      type: "number",\n      name: "numberWithReducer",\n      reducers: [minNumber1, maxNumber10],\n      value: "1"\n    });\n  return <input {...fieldInputProps} />;\n}\n')),Object(i.b)("h2",{id:"validation"},"Validation"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-javascript"}),'const email = value =>\n    !(value && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value))\n      ? undefined\n      : "Mail not Valid";\nconst required = value => (value && value.trim() !== "" ? undefined : "Required");\n\nconst CustomInput = props => {\n  const [status, validation] = useValidation([required, email]);\n  const fieldInputProps = useField({\n      type: "text",\n      touched: true,\n      name: "email",\n      ...validation\n  });\n  return (\n    <div>\n      <input {...fieldInputProps} />\n      {status.error && <label>{status.error}</label>}\n    </div>\n  )\n}\n')))}void 0!==o&&o&&o===Object(o)&&Object.isExtensible(o)&&!o.hasOwnProperty("__filemeta")&&Object.defineProperty(o,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"docs/useField.mdx"}}),o.isMDXComponent=!0}}]);
//# sourceMappingURL=component---docs-use-field-mdx-b14e0d863ea92534de15.js.map